basePath: /api
definitions:
  handlers.CreateChatRequest:
    properties:
      chat_name:
        type: string
      member_ids:
        items:
          type: string
        type: array
    required:
    - chat_name
    - member_ids
    type: object
  handlers.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  handlers.RegisterRequest:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
host: localhost:8080
info:
  contact:
    email: finimensniper@gmail.com
    name: FinimenSniper
    url: https://github.com/Finimen/SafeMassager
  description: Real-time messaging web service
  license:
    name: MIT
    url: https://github.com/Finimen/SafeMassager
  termsOfService: https://github.com/Finimen/SafeMassager
  title: Massager API
  version: "1.0"
paths:
  /:
    get:
      description: Returns basic information about the API
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Information about API
      tags:
      - info
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticates the user and returns a token
      parameters:
      - description: Data for login
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: User login
      tags:
      - auth
  /auth/logout:
    post:
      consumes:
      - application/json
      description: Terminates the user session
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: User logout
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Creates a new user in the system
      parameters:
      - description: Data for registration
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: User registration
      tags:
      - auth
  /chats:
    get:
      consumes:
      - application/json
      description: Returns a list of chats the user is participating in
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get the user's chats
      tags:
      - chats
    post:
      consumes:
      - application/json
      description: Creates a new chat with the specified participants
      parameters:
      - description: Data for creating a chat
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.CreateChatRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: integer
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Create a chat
      tags:
      - chats
  /chats/{chatId}:
    delete:
      consumes:
      - application/json
      description: Deletes a chat (chat members only)
      parameters:
      - description: Chat ID
        in: path
        name: chatId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Delete chat
      tags:
      - chats
  /chats/{chatId}/messages:
    get:
      consumes:
      - application/json
      description: Returns messages for the specified chat with pagination
      parameters:
      - description: Chat ID
        in: path
        name: chatId
        required: true
        type: integer
      - description: Message limit (max 100)
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get chat messages
      tags:
      - chats
  /ws:
    get:
      description: Establishes a real-time WebSocket connection
      parameters:
      - description: JWT token (cookie alternative)
        in: query
        name: token
        type: string
      responses:
        "101":
          description: Switching Protocols
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: WebSocket connection
      tags:
      - websocket
schemes:
- http
securityDefinitions:
  BearerAuth:
    description: 'JWT token in the format: Bearer <token>'
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
